openapi: 3.0.3
info:
  title: Library management system APIs
  contact:
    email: romachervinko@gmail.com
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: theme
  - name: publishing-house
  - name: book-state
paths:
  /theme:
    get:
      tags:
        - theme
      summary: Get themes
      operationId: getThemes
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ThemeResponseDTO'
                  meta:
                    type: object
    post:
      tags:
        - theme
      summary: Create theme
      operationId: createTheme
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ThemeCreateRequestDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponseDTO'
      x-codegen-request-body-name: body
    put:
      tags:
        - theme
      summary: Updated theme
      operationId: updateThemeById
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ThemeUpdateRequestDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponseDTO'
  /theme/{id}:
    get:
      tags:
        - theme
      summary: Get theme by id
      operationId: getThemeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponseDTO'
    delete:
      tags:
        - theme
      summary: Deletes theme
      operationId: deleteThemeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Theme not found
          content: { }
  /theme/name/{name}:
    get:
      tags:
        - theme
      summary: Get theme by name
      operationId: getThemeByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponseDTO'
  /publishing-house:
    get:
      tags:
        - publishing-house
      summary: Get publishing houses
      operationId: getPublishingHouses
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PublishingHouseResponseDTO'
                  meta:
                    type: object
    post:
      tags:
        - publishing-house
      summary: Create publishing house
      operationId: createPublishingHouse
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PublishingHouseCreateRequestDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishingHouseResponseDTO'
      x-codegen-request-body-name: body
    put:
      tags:
        - publishing-house
      summary: Updated publishing house
      operationId: updatePublishingHouseById
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PublishingHouseUpdateRequestDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishingHouseResponseDTO'
  /publishing-house/{id}:
    get:
      tags:
        - publishing-house
      summary: Get publishing house by id
      operationId: getPublishingHouseById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishingHouseResponseDTO'
    delete:
      tags:
        - publishing-house
      summary: Deletes publishing house
      operationId: deletePublishingHouseById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Theme not found
          content: { }
  /publishing-house/name/{name}:
    get:
      tags:
        - publishing-house
      summary: Get publishing house by name
      operationId: getPublishingHouseByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishingHouseResponseDTO'
  /book-state:
    get:
      tags:
        - book-state
      summary: Get book states
      operationId: getBookStates
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BookStateResponseDTO'
                  meta:
                    type: object
    post:
      tags:
        - book-state
      summary: Create book state
      operationId: createBookState
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BookStateCreateRequestDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookStateResponseDTO'
      x-codegen-request-body-name: body
    put:
      tags:
        - book-state
      summary: Updated book state
      operationId: updateBookState
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BookStateUpdateRequestDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookStateResponseDTO'
  /book-state/{id}:
    get:
      tags:
        - book-state
      summary: Get publishinghouse by id
      operationId: getBookStateById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookStateResponseDTO'
    delete:
      tags:
        - book-state
      summary: Deletes book state
      operationId: deleteBookStateById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Theme not found
          content: { }
  /book-state/name/{name}:
    get:
      tags:
        - book-state
      summary: Get publishinghouse by name
      operationId: getBookStateByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookStateResponseDTO'
components:
  schemas:
    ThemeCreateRequestDTO:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        description:
          type: string
      required:
        - name
    ThemeUpdateRequestDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
        name:
          type: string
          minLength: 1
        description:
          type: string
      required:
        - id
        - name
    ThemeResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
    PublishingHouseCreateRequestDTO:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        description:
          type: string
      required:
        - name
    PublishingHouseUpdateRequestDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
        name:
          type: string
          minLength: 1
        description:
          type: string
      required:
        - id
        - name
    PublishingHouseResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
    BookStateCreateRequestDTO:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        description:
          type: string
      required:
        - name
    BookStateUpdateRequestDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
        name:
          type: string
          minLength: 1
        description:
          type: string
      required:
        - id
        - name
    BookStateResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string